# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P2-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 6 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  # s: [0.33, 0.50, 1024]
  # m: [0.67, 0.75, 768]
  # l: [1.00, 1.00, 512]
  # x: [1.00, 1.25, 512]

# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 9, C2f, [64, True]] #1
  - [-1, 1, Conv, [128, 3, 2]] # 2-P2/4
  - [-1, 9, C2f, [128, True]] #3
  - [-1, 1, Conv, [256, 3, 2]] # 4-P3/8
  - [-1, 6, C2f, [256, True]] #5
  - [-1, 1, Conv, [512, 3, 2]] # 6-P4/16
  - [-1, 6, C2f, [512, True]] #7
  - [-1, 1, Conv, [1024, 3, 2]] # 8-P5/32
  - [-1, 3, C2f, [1024, True]] #9 
  - [-1, 1, SPPF, [1024, 5]] # 10

# YOLOv8.0-p2 head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 11
  - [[-1, 7], 1, Concat, [1]] # cat backbone P4 + P5 = (1536, 40, 40) #12
  - [-1, 3, C3Ghost, [512, False]] # 13

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #14
  - [[-1, 5], 1, Concat, [1]] # cat backbone P3 + (P4 + P5) = (768, 80, 80)  #15
  - [-1, 3, C3Ghost, [256, False]] # 16 (P3/8-small) 
    # (256, 80, 80)
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #17
  - [[-1, 3], 1, Concat, [1]] # cat backbone P2 + (P3 + (P4 + P5)) = (128, 160, 160) #18
  - [-1, 3, C3Ghost, [128, False]] # 19 (P2/4-xsmall)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #20
  - [[-1, 1], 1, Concat, [1]] # cat backbone P2 + (P3 + (P4 + P5)) = (128, 160, 160) #21
  - [-1, 3, C3Ghost, [64, False]] # 22 (P2/4-xsmall)

  - [-1, 1, Conv, [64, 3, 2]] # -> (128, 80, 80) #23
  - [[-1, 19], 1, Concat, [1]] # cat head P3 #24
  - [-1, 3, C3Ghost, [128, False]] # 25 (P3/8-small) -> (256, 80, 80)

  - [-1, 1, Conv, [128, 3, 2]] # -> (128, 80, 80) #26
  - [[-1, 16], 1, Concat, [1]] # cat head P3 #27
  - [-1, 3, C3Ghost, [256, False]] # 28 (P3/8-small) -> (256, 80, 80)

  - [-1, 1, Conv, [256, 3, 2]]   # 29
  - [[-1, 13], 1, Concat, [1]] # cat head P4 #30
  - [-1, 3, C3Ghost, [512, False]] # 31 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]] #32
  - [[-1, 10], 1, Concat, [1]] # cat head P5 #33
  - [-1, 3, C3Ghost, [1024, False]] # 34 (P5/32-large)

  - [[28, 31, 34], 1, Detect, [nc]] # Detect(P3, P4, P5)
